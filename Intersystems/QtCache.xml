<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Qt.CacheTool">
<Super>%RegisteredObject</Super>
<TimeCreated>63850,61720.151703</TimeCreated>

<Property name="TempBinaryStream">
<Type>%Stream.GlobalCharacter</Type>
<Private>1</Private>
</Property>

<Property name="TempCharacterStream">
<Type>%Stream.GlobalCharacter</Type>
<Private>1</Private>
</Property>

<Property name="LastStatus">
<Type>%Status</Type>
</Property>

<Property name="ErrorLog">
<Type>%String</Type>
</Property>

<Method name="%OnNew">
<FormalSpec>initvalue</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    S ..LastStatus = $$$OK
    S ..TempBinaryStream = ##class(%FileBinaryStream).%New()
    S ..TempCharacterStream = ##class(%FileCharacterStream).%New()
    
    Q $$$OK
]]></Implementation>
</Method>

<Method name="LastStatusSet">
<FormalSpec>status:%Status</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	S i%LastStatus = status
	I $$$ISERR(..LastStatus) {
		S i%ErrorLog = $SYSTEM.Status.GetOneErrorText(..LastStatus)
	}ELSE{
		S i%ErrorLog = ""
	}
	
	Q $$$OK
]]></Implementation>
</Method>

<Method name="GetLastStatus">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[    Q ..LastStatus
]]></Implementation>
</Method>

<Method name="GetErrorLog">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Q ..ErrorLog
]]></Implementation>
</Method>

<Method name="ListNamespaces">
<ReturnType>%Library.List</ReturnType>
<Implementation><![CDATA[
    S LS=""
    
    try{    
        S I="" F  S I=$O(^CONFIG("Namespaces",I)) Q:I=""  S LS=LS_$LB(I)        
    }catch ex{
        S ..LastStatus = ex.AsStatus()
    }
    
    Q LS
]]></Implementation>
</Method>

<Method name="ListObjects">
<FormalSpec>uci:%String,filter:%String</FormalSpec>
<ReturnType>%Stream.GlobalCharacter</ReturnType>
<Implementation><![CDATA[
    ZN uci
    S STREAM = ""
    
    try{                                
        S STREAM = ##class(%FileCharacterStream).%New()
        S STREAM.StreamFormatWrite = 0           
        // Routinen
        S rs=##class(%ResultSet).%New()
        S rs.ClassName="%Library.Routine"
        S rs.QueryName="RoutineList"
        S sc=rs.Execute("*.int,*.mac")      
          
        while rs.%Next() {
            S NAME=rs.Data("Name")
            S ROUTINE=##class(%Library.Routine).%OpenId(NAME)               
            I ROUTINE.Generated=0 D STREAM.WriteLine(NAME)     
        }
            
        // Klassen
        S LSC=""
        S QSPECC="/diffexport=1/unicode=1"
        D $SYSTEM.OBJ.GetClassList(.LSC, QSPECC)
        S I="" F  S I=$O(LSC(I)) Q:I=""  D STREAM.WriteLine(I_".cls")           
        
        // Globals 
        S rs=##class(%ResultSet).%New()
        S rs.ClassName="%SYS.GlobalQuery"
        S rs.QueryName="NameSpaceList"
        S sc=rs.Execute($SYSTEM.SYS.NameSpace())    
        
        while rs.%Next() {
            S NAME=rs.Data("Name")
            D STREAM.WriteLine(NAME_".gbl")     
        }        
    }catch ex{
        S ..LastStatus = ex.AsStatus()
    }
    
    ZN "%SYS"
    Q STREAM
]]></Implementation>
</Method>

<Method name="ImportXML">
<FormalSpec>uci:%String,xml:%Stream.GlobalBinary,qspec:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	try{
	    ZN uci	    	    		           
    	S ..LastStatus = $SYSTEM.OBJ.LoadStream(xml, qspec)    	        	
    }catch ex{
        S ..LastStatus = ex.AsStatus()        
    }
        
    ZN "%SYS"
        
    Q ..LastStatus
]]></Implementation>
</Method>

<Method name="ExportXML">
<FormalSpec>uci:%String,object:%String</FormalSpec>
<ReturnType>%Stream.GlobalCharacter</ReturnType>
<Implementation><![CDATA[
    ZN uci
    
    try{
        S ERRLOG=""
        S QSPECC="/diffexport=1"
                
        D ..TempCharacterStream.Clear()
        D ..TempCharacterStream.Rewind()
        D $SYSTEM.OBJ.ExportPatternToStream(object,..TempCharacterStream,QSPECC,.ERRLOG)          
        
        D ..TempBinaryStream.Clear()
        D ..TempBinaryStream.Rewind()
        
        WHILE '..TempCharacterStream.AtEnd {    
            S DAT = ..TempCharacterStream.ReadLine()
            D ..TempBinaryStream.WriteLine(DAT)
        }        
    }catch ex{
        S ..LastStatus = ex.AsStatus()        
    }
    
    ZN "%SYS"
    Q ..TempBinaryStream
]]></Implementation>
</Method>

<Method name="Execute">
<FormalSpec>uci:%String,code:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    S SC=$$$OK
    
    TRY{
        X code
    }CATCH EX{
        #dim ex as %Exception.AbstractException
        S SC=EX.AsStatus()
        S ..LastStatus = SC
    }
    
    Q SC
]]></Implementation>
</Method>
</Class>


<Project name="QtCache" LastModified="2015-11-01 09:10:14.468656">
  <Items>
    <ProjectItem name="Qt.CacheTool" type="CLS"></ProjectItem>
  </Items>
</Project>
</Export>
